plugins {
    id 'java'
    id 'maven-publish'
    id 'com.palantir.docker' version '0.35.0'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.vaadin' version '24.1.12'
    id 'tbot-ruler.java-conventions'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

vaadin {
    frontendDirectory = file('src/frontend')
    npmFolder = file('npm')
}

project.group = tbotRulerGroup
project.version = tbotRulerVersion
project.description = 'TBot Ruler Console'

project.repositories {
    mavenLocal()
    mavenCentral()
}

project.ext {
    retrofitVersion = '2.4.0'

    jacksonVersion = '2.14.1'
    javaxValidationVersion = '2.0.2'

    logSlf4jVersion = '2.0.9'
    logLockbackVersion = '1.4.11'
    lombokVersion = '1.18.22'
    lombokPluginVersion = '1.16.16.0'

    junitJupiterVersion = '5.10.0'
    junitMockitoVersion = '5.5+'
}

project.dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.0"
        mavenBom "com.vaadin:vaadin-bom:24.1.12"
    }
}

project.dependencies {
    implementation(project(path: ":tbot-ruler-service", configuration: "instrumentedJars"))

    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.springframework.boot:spring-boot-starter-security"

    implementation "com.vaadin:vaadin-spring-boot-starter"

    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-jackson:${retrofitVersion}"

    implementation "org.slf4j:slf4j-api:${logSlf4jVersion}"
    implementation "org.slf4j:jcl-over-slf4j:${logSlf4jVersion}"
    implementation "ch.qos.logback:logback-classic:${logLockbackVersion}"
    implementation "ch.qos.logback:logback-core:${logLockbackVersion}"

    implementation "jakarta.validation:jakarta.validation-api:${javaxValidationVersion}"

    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}"
    implementation "com.fasterxml.jackson.module:jackson-module-parameter-names:${jacksonVersion}"

    implementation "org.apache.httpcomponents:httpclient:4.5.5"

    compileOnly "org.projectlombok:lombok-maven-plugin:${lombokPluginVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"
    testImplementation "org.mockito:mockito-core:${junitMockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${junitMockitoVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

project.tasks.named('test') {
    useJUnitPlatform()
}

project.tasks.named('bootJar') {
    mainClass = 'com.tbot.ruler.RulerApp'
    archiveClassifier = 'boot'
}

project.tasks.named('jar') {
    archiveClassifier = 'plain'
}

project.tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

